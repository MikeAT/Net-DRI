{"name":"Net-DRI","tagline":"Net-DRI-0.96_06_tdw with new gTLD support","body":"Net-DRI-0.96_06_tdw is based on Net-DRI-0.96_05 Patrick Mezvek, [Home Page](http://www.dotandco.com/services/software/Net-DRI/) and [CPAN](http://search.cpan.org/dist/Net-DRI/)\r\n\r\n* * *\r\n#### Overview\r\nThis version contains the following updates along with a few bug fixes and improvements\r\n\r\n##### LaunchPhase extension \r\nBased on draft-ietf-eppext-launchphase-01\r\n\r\n##### New gTLD backend providers (RO's)\r\nAfilias, ARI, CentralNIC, CoreNIC, Charleston Road Registry, Donuts, Famous Four Media, GMO Registry, KSRegistry (Starting Dot), Minds And Machines, Neustar, Registry-in-a-Box from NicAT, Rightside, Tango from KNIPP, UniRegistry\r\n\r\n##### Planned support for providers\r\nCoCCA, KNET, Nic.br, Nominet, OpenRegistry, SIDN, TCI, Verisign, ZACR\r\n\r\n##### Trademark services\r\nTMCH (Deloitte), and TMDB (IBM): CNIS and SMDRL only\r\n\r\n##### Added/Updated/Fixed support for ccTLDs\r\nUK, IT, ES, NO, SE/NU (IIS module), BE, EU, DE, CH, ZA, PL\r\n\r\n\r\n* * *\r\n#### NGTLD Usage\r\n\r\nThe NGTLD \"Super-DRD\" is intended to work for all new gTLD providers with minimal fuss. In principle you can add the registry by selecting the provider and optionally customise the name and TLDs available.\r\n```perl\r\n$dri->add_registry('NGTLD',{clid => '...',provider=>'...',name=>'...', tlds=>[]});\r\n```\r\n\r\n##### Selecting a back end provider\r\n\r\n```perl\r\n$dri->add_registry('NGTLD',{clid => 'ClientX',provider=>'Neustar'});\r\n$dri->target('Neustar')->add_current_profile(....);\r\n```\r\n\r\n##### Backend providers with shared environments\r\n\r\nDonuts is an example of a backend that provides a single platform for all their TLDs. Normally only specifying the provider will suite your needs\r\n\r\n```perl\r\n$dri->add_registry('NGTLD',{clid => 'ClientX',provider=>'donuts'});\r\n$dri->target('donuts')->add_current_profile(....);\r\n````\r\n\r\n##### Backend providers with dedicated environments\r\n\r\nNeustar is an example of a backend provider that provides a dedicated environment per TLD, so you may like to use the TLD as the target name.\r\ne.g: add a custom target name, by default this is the back end provider name, but in this instance we select buzz\r\nNote, if the name you specified matches one of the TLD's and you have not manually specified the tld list, if will use only this TLD. If the name doesn't match a TLD, it will make all TLD's by the prover available in the DRD\r\n\r\n```perl\r\n$dri->add_registry('NGTLD',{clid => 'ClientX',provider=>'neustar',name=>'buzz'});\r\n$dri->target('buzz')->add_current_profile(....);\r\n```\r\n\r\nSome TLDs have specific extensions that need to be loaded. In the case of NYC it is required to either set name or tlds parameter in order to load the Nexus extension\r\n\r\n```perl\r\n$dri->add_registry('NGTLD',{clid => 'ClientX',provider=>'neustar',name=>'nyc'}); # using name\r\n$dri->target('nyc')->add_current_profile(....);\r\n$dri->add_registry('NGTLD',{clid => 'ClientX',provider=>'neustar',name=>'whatever',tlds=['nyc']}); # using tld\r\n```\r\n\r\n* * *\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}